generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model sessions {
  id        Int       @id @default(autoincrement())
  userId    Int
  token     String    @unique
  createdAt DateTime  @default(now())
  isActive  Boolean   @default(true)
  users     users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id        Int        @id @default(autoincrement())
  email     String     @unique @db.VarChar(255)
  password  String     @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  isActived Boolean    @default(true)
  produtos  produtos[]
  sessions  sessions[]
}

model categorias {
  id                Int                 @id @default(autoincrement())
  tipo              String              @unique @db.VarChar(255)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  isActived         Boolean             @default(true)
  categoriasProduto categoriasProduto[]
}

model categoriasProduto {
  id          Int        @id @default(autoincrement())
  produtoId   Int
  categoriaId Int
  categorias  categorias @relation(fields: [categoriaId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  produtos    produtos   @relation(fields: [produtoId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model imagensProduto {
  id        Int        @id @default(autoincrement())
  produtoid Int
  imageUrl  String     @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  isActived Boolean    @default(true)
  produtos  produtos   @relation(fields: [produtoid], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model produtos {
  id                Int                 @id @default(autoincrement())
  createdByUserid   Int
  nome              String              @db.VarChar(255)
  rate              Int
  descricao         String?
  largura           Int
  altura            Int
  comprimento       Int
  peso              Int
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  isActived         Boolean             @default(true)
  users             users               @relation(fields: [createdByUserid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  categoriasProduto categoriasProduto[]
  imagensProduto    imagensProduto[]
}
